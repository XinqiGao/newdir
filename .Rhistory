attach(Carseats)
contrasts(ShelveLoc)
install.packages("ISLR")
library(ISLR)
data(Auto)
head(Auto)
summary(Auto)
DataFit<-lm(mpg ~ horsepower,data=Auto)
summary(DataFit)
predict(DataFit, data.frame(horsepower = (c(98))))
summary(DataFit)
predict(DataFit, data.frame(horsepower = (c(98))))
predict(DataFit, data.frame(horsepower = (c(98))), interval = "confidence")
predict(DataFit, data.frame(horsepower = (c(98))), interval = "prediction")
plot(Auto$horsepower, Auto$mpg, main = "Scatterplot of mpg vs. horsepower", xlab = "horsepower", ylab = "mpg", col = "blue")
abline(DataFit, col = "red")
?lm
library(ISLR)
data(Default)
head(Default)
library(ggplot2)
p1<-ggplot(Default,aes(x=balance,y=income)) - geom_point(aes(color=default))
p1<-ggplot(Default,aes(x=balance,y=income))-geom_point(aes(color=default))
p1<-ggplot(Default,aes(x=balance,y=income))-geom_point(aes(color = default))
p1 <- ggplot(Default,aes(x=balance, y=income)) - geom_point(aes(color = default))
# Load in dataset
library(ISLR)
data(Default)
head(Default)
# income by balance colored by defaulters
#install.packages("ggplot2")
library(ggplot2)
p1 <- ggplot(Default, aes(x=balance, y=income)) + geom_point(aes(color = default))
p1 <- p1 + ggtitle("Income & Balance colored by Default")
p1 <- p1 + theme(plot.title = element_text(lineheight=.8, face="bold"))
p1 <- p1 + theme(axis.title.x = element_text(face="bold", size=15),
axis.text.x  = element_text(size=12, color="black"),
axis.title.y = element_text(face="bold", size=15),
axis.text.y  = element_text(size=12, color="black")
)
p1 <- p1 + scale_y_continuous(breaks=seq(0,80000,10000))
p1 <- p1 + scale_x_continuous(breaks=seq(0,3000,500))
p1
p1
p1
p1
# Side-by-side boxplot of balance vs default group
p2 <- ggplot(Default, aes(x=default, y=balance, fill=default)) + geom_boxplot()
p2 <- p2 + geom_boxplot() + ggtitle("Card Balance by Default Group")
p2 <- p2 + theme(plot.title = element_text(lineheight=.8, face="bold"))
p2 <- p2 + theme(axis.title.x = element_text(face="bold", size=15),
axis.text.x  = element_text(size=12, color="black"),
axis.title.y = element_text(face="bold", size=15),
axis.text.y  = element_text(size=12, color="black")
)
p2 <- p2 + scale_y_continuous(breaks=seq(0,3500,500))
p2
# Side-by-side boxplot of income vs default group
p3 <- ggplot(Default, aes(x=default, y=income, fill=default))
p3 <- p3 + geom_boxplot() + ggtitle("Income by Default Group")
p3 <- p3 + theme(plot.title = element_text(lineheight=.8, face="bold"))
p3 <- p3 + theme(axis.title.x = element_text(face="bold", size=15),
axis.text.x  = element_text(size=12, color="black"),
axis.title.y = element_text(face="bold", size=15),
axis.text.y  = element_text(size=12, color="black")
)
p3 <- p3 + scale_y_continuous(breaks=seq(0,80000,10000))
p3
#multiplot(p2, p3, cols=2)
# fit a logit
glm.fit <- glm(default ~ balance, data=Default, family =binomial)
summary(glm.fit)
# what are the predicted probabilities
p_hat <- round(predict(glm.fit, type="response"),4)
# what are the predicted classes
y_hat <- ifelse(Yhat_probs>0.50, 1, 0)
# what are the predicted classes
y <- ifelse(Default[,"default"]=="Yes", 1, 0)
# maybe put the response in a data.frame with the prob and class prediction
results = data.frame(Y, y_hat, p_hat)
colnames(results) = c("y", "y_hat", "p_hat")
p_hat <- round(predict(glm.fit, type="response"),4)
# what are the predicted classes
y_hat <- ifelse(Yhat_probs>0.50, 1, 0)
y_hat <- ifelse(yhat_probs>0.50, 1, 0)
p_hat <- round(predict(glm.fit, type="response"),4)
glm.fit <- glm(default ~ balance, data=Default, family =binomial)
summary(glm.fit)
# what are the predicted probabilities
p_hat <- round(predict(glm.fit, type="response"),4)
# what are the predicted classes
y_hat <- ifelse(Yhat_probs>0.50, 1, 0)
library(ISLR)
library(ISLR)
source('~/.active-rstudio-document')
R.file <- read.csv("~/Documents/Purdue/2016 fall/Using R/Project/R file.csv")
View(R.file)
HouseSale <- read.csv("~/Documents/Purdue/2016 fall/Using R/Project/R file.csv")
View(HouseSale)
library(ISLR)
mydata <- read.csv("~/Documents/Purdue/2016 fall/Using R/Project/R file.csv")
View(mydata)
class(mydata)
summary(mydata)
str(mydata)
names(mydata)
hist(mydata$Lot.Area)
hist(mydata$Bldg.Type)
hist(mydata$Overall.Qual)
hist(mydata$Year.Built)
hist(mydata$Mas.Vnr.Area)
hist(mydata$Total.Bsmt.SF)
hist(mydata$Gr.Liv.Area)
hist(mydata$Bedroom.AbvGr)
hist(mydata$Garage.Area)
hist(mydata$SalePrice)
library(ggplot2)
qplot(mydata$SalePrice)
qplot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=Overall.Qual, alpha=I(.5),
main="Distribution of SalePrice by Overall.Qual", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=factor(Overall.Qual), alpha=I(.5),
main="Distribution of SalePrice by Overall.Qual", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=Overall.Qual, alpha=I(.5),
main="Distribution of SalePrice by Overall.Qual", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=Bedroom.AbvGr, alpha=I(.5),
main="Distribution of SalePrice by Bedroom.AbvGr", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=factor(Bedroom.AbvGr), alpha=I(.5),
main="Distribution of SalePrice by Bedroom.AbvGr", xlab="SalePrice",
ylab="Density")
qplot(Bldg.Type, SalePrice, data=mydata, geom=c("boxplot"),
fill=Bldg.Type, main="SalePrice by Bldg.Type",
xlab="", ylab="SalePrice")
scatterplot(SalePrice~Bldg.Type|type, boxplots=FALSE, span=0.75, col=gray(c(0,0.5,0.7)), data=mydata)
?scatterplot
plot(SalePrice~Bldg.Type|type, boxplots=FALSE, span=0.75, col=gray(c(0,0.5,0.7)), data=mydata)
library(car)
scatterplot(SalePrice~Bldg.Type|type, boxplots=FALSE, span=0.75, col=gray(c(0,0.5,0.7)), data=mydata)
?scatterplot
facet_wrap(~ Bldg.Type, ncol = 5)
library(ggplot2)
ggplot(mydata, aes(x = Bldg.Type, y = SalePrice, fill = Year.Built)) + geom_boxplot() +
facet_wrap(~ Bldg.Type, ncol = 5)
ggplot(mydata, aes(x = Bldg.Type, y = SalePrice, fill = Lot.Area)) + geom_boxplot() +
facet_wrap(~ Bldg.Type, ncol = 5)
ggplot(mydata, aes(x = Lot.Area, y = SalePrice, fill = Bldg.Type)) + geom_boxplot() +
facet_wrap(~ Bldg.Type, ncol = 5)
ggplot(mydata, aes(x = Year.Built, y = SalePrice, fill = Bldg.Type)) + geom_boxplot() +
facet_wrap(~ Bldg.Type, ncol = 5)
ggplot(mydata, aes(x = Lot.Area, y = SalePrice, fill = Overall.Qual)) + geom_boxplot() +
facet_wrap(~ Overall.Qual, ncol = 10)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Year.Built))
p1 + geom_point(aes(color = Year.Built)) + facet_wrap( ~ Year.Built)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Total.Bsmt.SF))
p1 + geom_point(aes(color = Total.Bsmt.SF)) + facet_wrap( ~ Year.Built)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Total.Bsmt.SF))
p1 + geom_point(aes(color = Total.Bsmt.SF)) + facet_grid(Total.Bsmt.SF ~ Overall.Qual)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Total.Bsmt.SF))
p1 + geom_point(aes(color = Total.Bsmt.SF)) + facet_grid(SalePrice ~ Overall.Qual)
ggplot(mydata, aes(x = Year.Built, y = SalePrice, fill = Bldg.Type)) + geom_boxplot() +
facet_wrap(~ Bldg.Type, ncol = 5)
View(mydata)
class(mydata)
summary(mydata)
str(mydata)
names(mydata)
hist(mydata$Lot.Area)
hist(mydata$Overall.Qual)
hist(mydata$Year.Built)
hist(mydata$Mas.Vnr.Area)
hist(mydata$Total.Bsmt.SF)
hist(mydata$Gr.Liv.Area)
hist(mydata$Bedroom.AbvGr)
hist(mydata$Garage.Area)
hist(mydata$SalePrice)
library(ggplot2)
qplot(mydata$SalePrice)
qplot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=Overall.Qual, alpha=I(.5),
main="Distribution of SalePrice by Overall.Qual", xlab="SalePrice",
ylab="Density")
qplot(Bldg.Type, SalePrice, data=mydata, geom=c("boxplot"),
fill=Bldg.Type, main="SalePrice by Bldg.Type",
xlab="", ylab="SalePrice")
ggplot(mydata, aes(x = Year.Built, y = SalePrice, fill = Bldg.Type)) + geom_boxplot() +
facet_wrap(~ Bldg.Type, ncol = 5)
ggplot(mydata, aes(x = Lot.Area, y = SalePrice, fill = Bldg.Type)) + geom_boxplot() +
facet_wrap(~ Bldg.Type, ncol = 5)
ggplot(mydata, aes(x = Lot.Area, y = SalePrice, fill = Overall.Qual)) + geom_boxplot() +
facet_wrap(~ Overall.Qual, ncol = 10)
ggplot(mydata, aes(x = Overall.Qual, y = SalePrice, fill = Overall.Qual)) + geom_boxplot() +
facet_wrap(~ Overall.Qual, ncol = 10)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Total.Bsmt.SF))
p1 + geom_point(aes(color = Total.Bsmt.SF)) + facet_wrap( ~ Year.Built)
p1 + geom_point(aes(color = Total.Bsmt.SF)) + facet_grid(SalePrice ~ Overall.Qual)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Total.Bsmt.SF))
p1 + geom_point(aes(color = Total.Bsmt.SF)) + facet_wrap( ~ Year.Built)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Total.Bsmt.SF))
plot(Lot.Area, SalePrice, main="Scatterplot Example",
xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(Lot.Area, SalePrice, main="Scatterplot Example",
xlab="Lot.Area ", ylab="SalePrice ", pch=19)
mydata <- read.csv("~/Documents/Purdue/2016 fall/Using R/Project/R file.csv")
View(mydata)
plot(Lot.Area, SalePrice, main="Scatterplot Example",
xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(Lot.Area, SalePrice, main="Scatterplot Example", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Lot.Area, SalePrice, main="Scatterplot Example", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Lot.Area, mydata$SalePrice, main="Scatterplot Example", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Garage.Area, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Garage.Area, mydata$SalePrice, main="Scatterplot ", xlab="Garage.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Bedroom.AbvGr, mydata$SalePrice, main="Scatterplot ", xlab="Bedroom.AbvGr ", ylab="SalePrice ", pch=19)
library(ggplot2)
library(caret)
library(mlbench) #to get Sonar data
data(Sonar)
set.seed(107)
inTrain <- createDataPartition(
y = Sonar$Class, ## the outcome data are needed
p = .75, ## The percentage of data in the training set
list = FALSE)
library(caret)
install.packages("caret")
library(caret)
library(mlbench) #to get Sonar data
install.packages("lattice")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ISLR)
library(caret)
data(Default)
head(Default)
library(caret)
library(ISLR)
data(Default)
head(Default)
intrain<-createDataPartition(Default$default,p=.70,list=FALSE)
View(intrain)
View(intrain)
set.seed(123)
intrain<-createDataPartition(Default$default,p=.70,list=FALSE)
View(intrain)
View(intrain)
train<-Default[intrain,]
test<- Default[-intrain,]
?trainControl
crtl<- trainControl(method="repeatedcv"
, defaultSummary=twoClassSummary
, classProbs = T)
crtl<- trainControl(method="repeatedcv"
, defaultSummary=twoClassSummary
, classProbs = TRUE)
crtl<- trainControl(method="repeatedcv"
, summaryFunction = twoClassSummary
, classProbs = TRUE)
lda<-train(default~.
, data=train
, metric="ROC"
, method="lda"
, trControl=ctrl)
ctrl<- trainControl(method="repeatedcv"
, summaryFunction = twoClassSummary
, classProbs = TRUE)
lda<-train(default~.
, data=train
, metric="ROC"
, method="lda"
, trControl=ctrl)
install.packages("pROC")
lda<-train(default~.
, data=train
, metric="ROC"
, method="lda"
, trControl=ctrl
?trainControl
?trainControl)
lda<-train(default~.
, data=train
, metric="ROC"
, method="lda"
, trControl=ctrl)
confusionMatrix(ldaClasses,test$default)
ldaClasses <-predict(lda,newdata=test)
ldaProbs<-predict(lad,newdata=test, prob="probs")
head(ldaClasses)
confusionMatrix(ldaClasses,test$default)
install.packages("e1071")
confusionMatrix(ldaClasses,test$default)
library(MASS)
library(ISLR)
fix(Boston)
str(Boston)
class(Boston)
?str()
?geom_histogram
?param1
?param()
library(MASS)
?param1()
?function()
?function
?function)
?function()
)
plotUnif <- function(n, plotVar="mpg", ...) {
data = runif(n)
hist(data, main=paste("Histogram of",n,"random uniform rv's"))
}
plotUnif(n=100, plotVar="Histogram")
plotUnif <- function(n, plotVar="mpg", ...) {
data = runif(n)
hist(data, main=paste("Histogram of",n,"random uniform rv's"))
}
plotUnif(100)
plotUnif(n=100)
plotUnif(x=100, y=200)
plotUnif(n=100)
plotUnif(x=100, y=200)
?system.time
?for
)
?apply
library(ISLR)
data(Auto)
matAuto <- as.matrix(Auto[,1:(ncol(Auto)-1)])
apply(X=matAuto, MARGIN=1, FUN=mean)
apply(X=matAuto, MARGIN=2, FUN=mean)
apply(matAuto, 2, mean)
apply(X=matAuto, margin=1, FUN=max)
apply(X=matAuto, margin=1, FUN=max)
myUrl <- "https://raw.githubusercontent.com/MatthewALanham/Datasets/master/OnlineRetail.csv"
rtl <- read.table(file=myUrl, header=T, sep="|"
, colClasses=c("factor","factor","factor","numeric"
,"character","numeric","numeric","factor"))
names(rtl)
aggregate(Quantity ~ Country, data=rtl, FUN=mean)
aggregate(cbind(horsepower, mpg) ~ origin + cylinders, data=Auto, FUN=mean)
shiny::runApp('Documents/newdir')
install.packages("shiny")
shiny::runApp('Documents/newdir')
runApp('Documents/newdir')
runApp('Documents/newdir')
library(ISLR)
mydata <- read.csv("~/Documents/Purdue/2016 fall/Using R/Project/R file.csv")
View(mydata)
class(mydata)
summary(mydata)
str(mydata)
names(mydata)
hist(mydata$Lot.Area)
hist(mydata$Overall.Qual)
hist(mydata$Year.Built)
hist(mydata$Mas.Vnr.Area)
hist(mydata$Total.Bsmt.SF)
hist(mydata$Gr.Liv.Area)
hist(mydata$Bedroom.AbvGr)
hist(mydata$Garage.Area)
hist(mydata$SalePrice)
library(ggplot2)
qplot(mydata$SalePrice)
qplot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=Overall.Qual, alpha=I(.5),
main="Distribution of SalePrice by Overall.Qual", xlab="SalePrice",
ylab="Density")
#qplot(SalePrice, data=mydata, geom="density", fill=Bedroom.AbvGr, alpha=I(.5),
main="Distribution of SalePrice by Bedroom.AbvGr", xlab="SalePrice",
ylab="Density")
# Boxplots
qplot(Bldg.Type, SalePrice, data=mydata, geom=c("boxplot"),
fill=Bldg.Type, main="SalePrice by Bldg.Type",
xlab="", ylab="SalePrice")
library(car)
plot(mydata$Lot.Area, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Garage.Area, mydata$SalePrice, main="Scatterplot ", xlab="Garage.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Bedroom.AbvGr, mydata$SalePrice, main="Scatterplot ", xlab="Bedroom.AbvGr ", ylab="SalePrice ", pch=19)
library(ggplot2)
ggplot(mydata, aes(x = Year.Built, y = SalePrice, fill = Bldg.Type)) + geom_boxplot() +
facet_wrap(~ Bldg.Type, ncol = 5)
facet_wrap(~ Year.Built, ncol = 5)
ggplot(mydata, aes(x = Year.Built, y = SalePrice, fill = Year.Built)) + geom_boxplot() +
facet_wrap(~ Year.Built, ncol = 5)
plot(mydata$Bedroom.AbvGr, mydata$SalePrice, main="Scatterplot ", xlab="Year.Built ", ylab="SalePrice ", pch=19)
plot(mydata$Bedroom.AbvGr, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Bedroom.AbvGr, mydata$SalePrice, main="Scatterplot ", xlab="Mas.Vnr.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Bedroom.AbvGr, mydata$SalePrice, main="Scatterplot ", xlab="Year.Built ", ylab="SalePrice ", pch=19)
plot(mydata$Year.Built, mydata$SalePrice, main="Scatterplot ", xlab="Year.Built ", ylab="SalePrice ", pch=19)
plot(mydata$Lot.Area, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Mas.Vnr.Area, mydata$SalePrice, main="Scatterplot ", xlab="Mas.Vnr.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Lot.Area, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Garage.Area, mydata$SalePrice, main="Scatterplot ", xlab="Garage.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Bedroom.AbvGr, mydata$SalePrice, main="Scatterplot ", xlab="Bedroom.AbvGr ", ylab="SalePrice ", pch=19)
plot(mydata$Year.Built, mydata$SalePrice, main="Scatterplot ", xlab="Year.Built ", ylab="SalePrice ", pch=19)
plot(mydata$Lot.Area, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Mas.Vnr.Area, mydata$SalePrice, main="Scatterplot ", xlab="Mas.Vnr.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Gr.Liv.Area, mydata$SalePrice, main="Scatterplot ", xlab="Gr.Liv.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Year.Remod.Add, mydata$SalePrice, main="Scatterplot ", xlab="Year.Remod.Add ", ylab="SalePrice ", pch=19)
plot(mydata$Total.Bsmt.Sf, mydata$SalePrice, main="Scatterplot ", xlab="Total.Bsmt.Sf ", ylab="SalePrice ", pch=19)
ggplot(mydata, aes(x = Year.Built, y = SalePrice, fill = Year.Built)) + geom_boxplot() +
facet_wrap(~ Year.Built, ncol = 5)
ggplot(mydata, aes(x = Lot.Area, y = SalePrice, fill = Bldg.Type)) + geom_boxplot() +
facet_wrap(~ Bldg.Type, ncol = 5)
ggplot(mydata, aes(x = Lot.Area, y = SalePrice, fill = Lot.Area)) + geom_boxplot() +
facet_wrap(~ Lot.Area, ncol = 5)
ggplot(mydata, aes(x = Overall.Qual, y = SalePrice, fill = Overall.Qual)) + geom_boxplot() +
facet_wrap(~ Overall.Qual, ncol = 10)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Total.Bsmt.SF))
p1 + geom_point(aes(color = Total.Bsmt.SF)) + facet_wrap( ~ Year.Built)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Total.Bsmt.SF))
p1 + geom_point(aes(color = Total.Bsmt.SF)) + facet_wrap( ~ Year.Built)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Total.Bsmt.SF))
p2 + geom_point(aes(color = Overall.Qual))
p2 + geom_point(aes(color = Overall.Qual))
p2 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p2 + geom_point(aes(color = Overall.Qual))
p4 <- ggplot(mydata, aes(x = Bldg.Type$1Farm, y=SalePrice)) + geom_point()
library(ggplot2)
qplot(mydata$SalePrice)
qplot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
qplot(Bldg.Type, SalePrice, data=mydata, geom=c("boxplot"),
fill=Bldg.Type, main="SalePrice by Bldg.Type",
xlab="", ylab="SalePrice")
plot(mydata$Lot.Area, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
qplot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=Overall.Qual, alpha=I(.5),
main="Distribution of SalePrice by Overall.Qual", xlab="SalePrice",
ylab="Density")
#qplot(SalePrice, data=mydata, geom="density", fill=Bedroom.AbvGr, alpha=I(.5),
main="Distribution of SalePrice by Bedroom.AbvGr", xlab="SalePrice",
ylab="Density")
# Boxplots
qplot(Bldg.Type, SalePrice, data=mydata, geom=c("boxplot"),
fill=Bldg.Type, main="SalePrice by Bldg.Type",
xlab="", ylab="SalePrice")
library(car)
plot(mydata$Lot.Area, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Garage.Area, mydata$SalePrice, main="Scatterplot ", xlab="Garage.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Bedroom.AbvGr, mydata$SalePrice, main="Scatterplot ", xlab="Bedroom.AbvGr ", ylab="SalePrice ", pch=19)
plot(mydata$Year.Built, mydata$SalePrice, main="Scatterplot ", xlab="Year.Built ", ylab="SalePrice ", pch=19)
plot(mydata$Lot.Area, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Lot.Area, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Mas.Vnr.Area, mydata$SalePrice, main="Scatterplot ", xlab="Mas.Vnr.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Bedroom.AbvGr, mydata$SalePrice, main="Scatterplot ", xlab="Bedroom.AbvGr ", ylab="SalePrice ", pch=19)
plot(mydata$Year.Built, mydata$SalePrice, main="Scatterplot ", xlab="Year.Built ", ylab="SalePrice ", pch=19)
plot(mydata$Mas.Vnr.Area, mydata$SalePrice, main="Scatterplot ", xlab="Mas.Vnr.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Bedroom.AbvGr, mydata$SalePrice, main="Scatterplot ", xlab="Bedroom.AbvGr ", ylab="SalePrice ", pch=19)
plot(mydata$Year.Built, mydata$SalePrice, main="Scatterplot ", xlab="Year.Built ", ylab="SalePrice ", pch=19)
plot(mydata$Lot.Area, mydata$SalePrice, main="Scatterplot ", xlab="Lot.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Mas.Vnr.Area, mydata$SalePrice, main="Scatterplot ", xlab="Mas.Vnr.Area ", ylab="SalePrice ", pch=19)
plot(mydata$Gr.Liv.Area, mydata$SalePrice, main="Scatterplot ", xlab="Gr.Liv.Area ", ylab="SalePrice ", pch=19)
library(ggplot2)
ggplot(mydata, aes(x = Overall.Qual, y = SalePrice, fill = Overall.Qual)) + geom_boxplot() +
facet_wrap(~ Overall.Qual, ncol = 10)
p2 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p2 + geom_point(aes(color = Overall.Qual))
ggplot(mydata, aes(x = Overall.Qual, y = SalePrice, fill = Overall.Qual)) + geom_boxplot() +
facet_wrap(~ Overall.Qual, ncol = 10)
p1 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p1 + geom_point(aes(color = Total.Bsmt.SF))
p2 <- ggplot(mydata, aes(x = Bldg.Type, y=SalePrice)) + geom_point()
p2 + geom_point(aes(color = Overall.Qual))
?qplot
qplot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=Overall.Qual, alpha=I(.5),
main="Distribution of SalePrice by Overall.Qual", xlab="SalePrice",
ylab="Density")
ot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
ot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
qplot(SalePrice, data=mydata, geom="boxplot", fill=Overall.Qual, alpha=I(.5),
main="Distribution of SalePrice by Overall.Qual", xlab="SalePrice",
ylab="boxplot")
ggplot(mydata, aes(x = Overall.Qual, y = SalePrice, fill = Overall.Qual)) + geom_boxplot() +
facet_wrap(~ Overall.Qual, ncol = 10)
qplot(SalePrice, data=mydata, geom="density", fill=Bldg.Type, alpha=I(.5),
main="Distribution of SalePrice by Bldg.Type", xlab="SalePrice",
ylab="Density")
